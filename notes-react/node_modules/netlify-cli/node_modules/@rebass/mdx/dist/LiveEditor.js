'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactLive = require('react-live');

var _mdxProvider = require('@mdx-js/tag/dist/mdx-provider');

var _rebass = require('rebass');

var _styledSystem = require('styled-system');

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var transformCode = function transformCode(src) {
  return '<React.Fragment>' + src + '</React.Fragment>';
};

var Preview = (0, _styledComponents2.default)(_reactLive.LivePreview)([], {
  padding: '16px',
  border: '1px solid',
  borderRadius: '2px 2px 0 0'
}, _styledSystem.borderColor);
Preview.defaultProps = {
  borderColor: 'gray'
};

var Editor = (0, _styledComponents2.default)(_reactLive.LiveEditor)([], {
  fontFamily: 'Menlo, monospace',
  fontSize: '13px',
  margin: 0,
  padding: '16px',
  borderRadius: '0 0 2px 2px',
  '&:focus': {
    outline: 'none',
    boxShadow: 'inset 0 0 0 1px #6cf'
  }
}, _styledSystem.color);
Editor.defaultProps = {
  bg: 'gray'
};

var Err = (0, _styledComponents2.default)(_reactLive.LiveError)([], {
  fontFamily: 'Menlo, monospace',
  fontSize: '13px',
  padding: '8px',
  color: 'white',
  backgroundColor: 'red'
});

exports.default = (0, _mdxProvider.withMDXComponents)(function (_ref) {
  var code = _ref.code,
      scope = _ref.scope,
      components = _ref.components,
      render = _ref.render;
  return _react2.default.createElement(
    _rebass.Box,
    { mb: 4 },
    _react2.default.createElement(
      _reactLive.LiveProvider,
      {
        code: code,
        scope: _extends({}, components, scope),
        mountStylesheet: false,
        transformCode: transformCode },
      typeof render === 'function' ? render({
        code: code,
        scope: _extends({}, components, scope)
      }) : _react2.default.createElement(
        _react2.default.Fragment,
        null,
        _react2.default.createElement(Preview, null),
        _react2.default.createElement(Editor, null),
        _react2.default.createElement(Err, null)
      )
    )
  );
});